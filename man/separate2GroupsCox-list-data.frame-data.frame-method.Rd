% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/draw.kaplan.R
\docType{methods}
\name{separate2GroupsCox,list,data.frame,data.frame-method}
\alias{separate2GroupsCox,list,data.frame,data.frame-method}
\title{Separate data in High and Low risk groups (based on Cox model)}
\usage{
\S4method{separate2GroupsCox}{list,data.frame,data.frame}(chosen.btas,
  xdata, ydata, probs = c(0.5, 0.5), no.plot = FALSE,
  plot.title = "SurvivalCurves", xlim = NULL, ylim = NULL,
  expand.yzero = FALSE, legend.outside = FALSE)
}
\arguments{
\item{chosen.btas}{list of testing coefficients to calculate prognostic indexes, for example ``list(Age = some_vector)``}

\item{xdata}{n x m matrix with n observations and m variables}

\item{ydata}{Survival object}

\item{probs}{How to separate high and low risk patients 50\%-50\% is the default, but for top and bottom 40\% -> c(.4,.6)}

\item{no.plot}{Only calculate p-value and do not generate survival curve plot}

\item{plot.title}{Name of file if}

\item{xlim}{Optional argument to limit the x-axis view}

\item{ylim}{Optional argument to limit the y-axis view}

\item{expand.yzero}{expand to y = 0}

\item{legend.outside}{If TRUE legend will be outside plot, otherwise inside}
}
\value{
an object just as cv.glmnet
}
\description{
Separate data in High and Low risk groups (based on Cox model)
}
\examples{
xdata <- matrix(rnorm(100), ncol = 20)
cv.glmSparseNet(xdata, rnorm(nrow(xdata)), 'correlation', family = 'gaussian')
cv.glmSparseNet(xdata, rnorm(nrow(xdata)), 'covariance', family = 'gaussian')

#
#
# Using MultiAssayExperiment

# load data
xdata <- MultiAssayExperiment::miniACC
# build valid data with days of last follow up or to event
event.ix <- which(!is.na(xdata$days_to_death))
cens.ix <- which(!is.na(xdata$days_to_last_followup))
xdata$surv_event_time <- array(NA, nrow(xdata@colData))
xdata$surv_event_time[event.ix] <- xdata$days_to_death[event.ix]
xdata$surv_event_time[cens.ix] <- xdata$days_to_last_followup[cens.ix]
# Keep only valid individuals
valid.ix <- as.vector(!is.na(xdata$surv_event_time) &
                      !is.na(xdata$vital_status) &
                      xdata$surv_event_time > 0)
xdata.valid <- xdata[, rownames(xdata@colData)[valid.ix]]
ydata.valid <- xdata.valid@colData[,c('surv_event_time', 'vital_status')]
colnames(ydata.valid) <- c('time', 'status')
cv.glmSparseNet(xdata.valid,
                  ydata.valid,
                  family          = 'cox',
                  network         = 'correlation',
                  experiment.name = 'RNASeq2GeneNorm')
}
