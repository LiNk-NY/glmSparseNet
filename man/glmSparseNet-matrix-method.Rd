% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network.glmnet.R
\docType{methods}
\name{glmSparseNet,matrix-method}
\alias{glmSparseNet,matrix-method}
\title{Calculate GLM model with network-based regularization}
\usage{
\S4method{glmSparseNet}{matrix}(xdata, ydata, network,
  network.options = network.options.default(), ...)
}
\arguments{
\item{xdata}{input data, can be a matrix or MultiAssayExperiment}

\item{ydata}{response data compatible with glmnet}

\item{network}{type of network, see below}

\item{network.options}{options to calculate network}

\item{...}{parameters that glmnet accepts}
}
\value{
an object just as glmnet
}
\description{
Calculate GLM model with network-based regularization
}
\details{
* string to calculate network based on data (correlation, covariance)
 * matrix representing the network
 * vector with already calculated penalty weights (can also be used directly with glmnet)
}
\examples{
xdata <- matrix(rnorm(100), ncol = 20)
glmSparseNet(xdata, rnorm(nrow(xdata)), 'correlation', family = 'gaussian')
glmSparseNet(xdata, rnorm(nrow(xdata)), 'covariance', family = 'gaussian')

#
#
# Using MultiAssayExperiment
# load data
xdata <- MultiAssayExperiment::miniACC
# TODO aking out x indivudals missing values
# build valid data with days of last follow up or to event
event.ix <- which(!is.na(xdata$days_to_death))
cens.ix <- which(!is.na(xdata$days_to_last_followup))
xdata$surv_event_time <- array(NA, nrow(xdata@colData))
xdata$surv_event_time[event.ix] <- xdata$days_to_death[event.ix]
xdata$surv_event_time[cens.ix] <- xdata$days_to_last_followup[cens.ix]
# Keep only valid individuals
valid.ix <- as.vector(!is.na(xdata$surv_event_time) &
                      !is.na(xdata$vital_status) &
                      xdata$surv_event_time > 0)
xdata.valid <- xdata[, rownames(xdata@colData)[valid.ix]]
ydata.valid <- xdata.valid@colData[,c('surv_event_time', 'vital_status')]
colnames(ydata.valid) <- c('time', 'status')
glmSparseNet(xdata.valid,
               ydata.valid,
               family          = 'cox',
               network         = 'correlation',
               experiment.name = 'RNASeq2GeneNorm')
}
